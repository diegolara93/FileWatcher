
Solving the Set Cover Problem Using C++/Java and Prolog

The objective of this project is to familiarize students with two different programming paradigms – imperative (using C++/Java) and declarative (using Prolog) – by solving the Set Cover Problem. This project aims to enhance students' problem-solving skills and their ability to implement solutions in different programming languages.

Problem Description:

The Set Cover Problem is a classical problem in computer science where the task is to find the smallest subset of a given set of sets (a collection of subsets) that covers all elements in the universal set. 
Example1: suppose 
       the set is [1,2,3,4,5] and 
       subsets is [[1,2], [2,3,4], [4,5],[1,4,5]]  
 then [[1,2], [2,3,4], [4,5]]  is a set cover

    [[2,3,4], [1,4,5]]   is also a set cover, and it is the minimum set cover because it uses only 2 subsets

Example2: greedy not always work. The largest subset may not be in the optimal solution

   the set is [1,2,3,4,5,6] and 
   subsets is [[1,2,3], [1,5], [2,6],[3,4]]  

 then [[1,2,3], [1,5], [2,6, [3,4]]  is a set cover

    [[1,5], [2,6, [3,4]]   is also a set cover, and it is the minimum set cover because it uses only 3 subsets


A detailed problem description can be found in Exercise 9 from Chapter 22 of your course material.

Assignment Tasks:

Test your implementation with different input sets, including instances as large as possible, and analyze the efficiency of your solution. 

Record the largest instance you tested and the time it takes for each program to solve it.
Sample test cases:

Test case 1:
Universe Set: {1, 2, 3, 4, 5}
Collection of Subsets: [{1,5}, {1, 2, 3}, {2, 4}, {3, 4}, {4, 5}]

Test case 2:
Universe Set: {1,2,3,4,5,6,7,8,9,10,11,12}
Collection of Subsets: [{1,2,3,4,5,6}, {5,6,8,9}, {1,4,7,10},{2,5,8,11}, {3,6,9,12}, {10,11,12}]

Test case 3:
Universe Set: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
Collection of Subsets: [{5}, {0, 1}, {0, 5, 7}, {1, 4, 5, 9}, {8, 3}, {8, 4, 7}, {8, 1, 3, 4}, {2, 6}]

Test case 4:
Universe Set: {1,2,3, 4, 5, 6, 7,8, 9, 10, 11, 12, 13, 14}
Collection of Subsets: [{1,2,3,4, 8,9,10,11}, {5,6,12,13}, {1,2,3, 4, 5, 6, 7}, {7,14}, {8,9,10,11,12 13, 14}]
Test case 5:

Universe Set: {1, 2, 3, 4, 5, 6, 7,8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,20,21,22,23,24,25,26,27, 28, 29,30 }
Collection of Subsets: [{1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 19,20,21,22,23}, {9, 10, 11, 12,24,25,26,27}, {1, 2, 3, 4, 5, 6, 7,8, 9, 10, 11, 12, 13, 14, 15}, {13, 14,28, 29}, {15, 20}, {16, 17, 18, 19,20,21,22,23,24,25,26,27, 28, 29,30}]


Write a Comparative Analysis:

a. Compare and contrast the approaches used in C++/Java and Prolog to solve the Set Cover Problem.

b. Discuss the advantages and disadvantages of each approach in terms of readability, ease of implementation, and efficiency.

c. Reflect on the strengths and weaknesses of imperative and declarative programming paradigms in solving this particular problem.

Submission Guidelines:

Submit your 
       source code in Java/C++
       source code in Prolog 
       screen shot of test inputs, and outputs.
       for the largest input, record how much time it takes for each program to solve it.
       a brief report documenting your implementation strategy